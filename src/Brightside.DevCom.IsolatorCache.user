áıRÅı
ÉR˛
TRPNBrightside.Config.Accounts.CPR.WebUI.Api.CPRController..ctor(ICPRModelService)
PRLJBrightside.Config.Accounts.CPR.WebUI.Api.CPRController.Get(CPRSearchModel)Tx:\repos\brightside.config\brightside.config.accounts.cpr.webui\api\cprcontroller.cs
ÁR‚
jRfƒ‰Ñ…ãÈ´ËXBrightside.Config.WebUI.MvcApplication.Application_AcquireRequestState(Object,EventArgs)(
@R<8Brightside.Config.WebUI.MvcApplication.FakeUserSession()(
LRHπòµÔï”´Ë:Brightside.Config.WebUI.MvcApplication.Application_Start()(
C	R?=Brightside.Config.WebUI.MvcApplication.get_PrincipalFactory()
H
RDBBrightside.Config.WebUI.MvcApplication.get_UserPermissionService()
AR=;Brightside.Config.WebUI.MvcApplication.get_RequestContext()
ORKIBrightside.Config.WebUI.MvcApplication.Application_PostAuthorizeRequest()Ax:\repos\brightside.config\brightside.config.webui\global.asax.cs
õRñ
vRrpBrightside.Config.Infrastructure.Web.Security.Impl.BrightsideAuthorisation.OnAuthorization(AuthorizationContext)
oRkiBrightside.Config.Infrastructure.Web.Security.Impl.BrightsideAuthorisation.AuthorizeCore(HttpContextBase)
bR^\Brightside.Config.Infrastructure.Web.Security.Impl.BrightsideAuthorisation.get_Permissions()
hRdbBrightside.Config.Infrastructure.Web.Security.Impl.BrightsideAuthorisation.set_Permissions(String)
dR`^Brightside.Config.Infrastructure.Web.Security.Impl.BrightsideAuthorisation.get_AnyPermission()
kRgeBrightside.Config.Infrastructure.Web.Security.Impl.BrightsideAuthorisation.set_AnyPermission(Boolean)
zRvtBrightside.Config.Infrastructure.Web.Security.Impl.MVC.BrightsideAuthorisation.OnAuthorization(AuthorizationContext)
sRomBrightside.Config.Infrastructure.Web.Security.Impl.MVC.BrightsideAuthorisation.AuthorizeCore(HttpContextBase)
fRb`Brightside.Config.Infrastructure.Web.Security.Impl.MVC.BrightsideAuthorisation.get_Permissions()
lRhfBrightside.Config.Infrastructure.Web.Security.Impl.MVC.BrightsideAuthorisation.set_Permissions(String)
hRdbBrightside.Config.Infrastructure.Web.Security.Impl.MVC.BrightsideAuthorisation.get_AnyPermission()
oRkiBrightside.Config.Infrastructure.Web.Security.Impl.MVC.BrightsideAuthorisation.set_AnyPermission(Boolean)hx:\repos\brightside.config\brightside.config.infrastructure.web\security\impl\brightsideauthorisation.cs
ÔRÍ
FRB@System.Web.Mvc.AuthorizeAttribute.AuthorizeCore(HttpContextBase)
fRb`System.Web.Mvc.AuthorizeAttribute.CacheValidateHandler(HttpContext,Object,HttpValidationStatus&)
MRIGSystem.Web.Mvc.AuthorizeAttribute.OnAuthorization(AuthorizationContext)
WRSQSystem.Web.Mvc.AuthorizeAttribute.HandleUnauthorizedRequest(AuthorizationContext)
MRIGSystem.Web.Mvc.AuthorizeAttribute.OnCacheAuthorization(HttpContextBase)
; R75System.Web.Mvc.AuthorizeAttribute.SplitString(String)
3!R/-System.Web.Mvc.AuthorizeAttribute.get_Roles()
9"R53System.Web.Mvc.AuthorizeAttribute.set_Roles(String)
4#R0.System.Web.Mvc.AuthorizeAttribute.get_TypeId()
3$R/-System.Web.Mvc.AuthorizeAttribute.get_Users()
9%R53System.Web.Mvc.AuthorizeAttribute.set_Users(String)Ìc:\users\jonathan.stowell\appdata\local\symbols\src\pdbsrc\public\public\42b47598-1b3c-4204-a801-5d4e7621ffd2\lysa00164\jonathan.stowell\system.web.mvc\68b2330e48624b6c9de05bed1c8c320f1\system.web.mvc\system.web.mvc\authorizeattribute.cs
ô&Rî
ì'RéãBrightside.Config.Infrastructure.Web.Security.Impl.ProfileManagement.Login(IPrincipalFactory,Action{IPrincipal},Action{IUser},IUser,String)
Ö(RÄ~Brightside.Config.Infrastructure.Web.Security.Impl.ProfileManagement.Login(IPrincipalFactory,HttpContext,IUser,String,Boolean)
è)RäáBrightside.Config.Infrastructure.Web.Security.Impl.ProfileManagement.RestoreUserFromSession`1(IPrincipalFactory,IUserPermissionService)bx:\repos\brightside.config\brightside.config.infrastructure.web\security\impl\profilemanagement.cs
∑*R≤
x+RtpBrightside.Config.Infrastructure.Web.Security.Impl.BrightsideAuthorisation.OnAuthorization(AuthorizationContext)(
q,RmiBrightside.Config.Infrastructure.Web.Security.Impl.BrightsideAuthorisation.AuthorizeCore(HttpContextBase)(
d-R`\Brightside.Config.Infrastructure.Web.Security.Impl.BrightsideAuthorisation.get_Permissions()(
j.RfbBrightside.Config.Infrastructure.Web.Security.Impl.BrightsideAuthorisation.set_Permissions(String)(
f/Rb^Brightside.Config.Infrastructure.Web.Security.Impl.BrightsideAuthorisation.get_AnyPermission()(
m0RieBrightside.Config.Infrastructure.Web.Security.Impl.BrightsideAuthorisation.set_AnyPermission(Boolean)(
1R{ñ˘Ê√˛”´ËmBrightside.Config.Infrastructure.Web.Security.Impl.MVC.BrightsideAuthorisation.AuthorizeCore(HttpContextBase)(
z2RvtBrightside.Config.Infrastructure.Web.Security.Impl.MVC.BrightsideAuthorisation.OnAuthorization(AuthorizationContext)
f3Rb`Brightside.Config.Infrastructure.Web.Security.Impl.MVC.BrightsideAuthorisation.get_Permissions()
l4RhfBrightside.Config.Infrastructure.Web.Security.Impl.MVC.BrightsideAuthorisation.set_Permissions(String)
h5RdbBrightside.Config.Infrastructure.Web.Security.Impl.MVC.BrightsideAuthorisation.get_AnyPermission()
o6RkiBrightside.Config.Infrastructure.Web.Security.Impl.MVC.BrightsideAuthorisation.set_AnyPermission(Boolean)lx:\repos\brightside.config\brightside.config.infrastructure.web\security\impl\mvc\brightsideauthorisation.cs
f7Rb`x:\repos\brightside.config\brightside.config.infrastructure.web\controllers\securedcontroller.cs
±8R¨
L9RHFBrightside.Config.Accounts.CPR.WebUI.Controllers.CPRController.Index()\x:\repos\brightside.config\brightside.config.accounts.cpr.webui\controllers\cprcontroller.cs
ì:Ré
R;RNLBrightside.Config.Customer.Policy.WebUI.Controllers.PolicyController.Index()
T<RPNBrightside.Config.Customer.Policy.WebUI.Controllers.PolicyController.Details()bx:\repos\brightside.config\brightside.config.customer.policy.webui\controllers\policycontroller.cs
¢=Rù
W>RSQBrightside.Config.Customer.Policy.WebUI.Controllers.PolicyEventController.Index()
Y?RUSBrightside.Config.Customer.Policy.WebUI.Controllers.PolicyEventController.Details()gx:\repos\brightside.config\brightside.config.customer.policy.webui\controllers\policyeventcontroller.cs
¬@RΩ
|ARxtBrightside.Config.Infrastructure.Web.Security.Impl.MVC.BrightsideAuthorisation.OnAuthorization(AuthorizationContext)(
uBRqmBrightside.Config.Infrastructure.Web.Security.Impl.MVC.BrightsideAuthorisation.AuthorizeCore(HttpContextBase)(
hCRd`Brightside.Config.Infrastructure.Web.Security.Impl.MVC.BrightsideAuthorisation.get_Permissions()(
nDRjfBrightside.Config.Infrastructure.Web.Security.Impl.MVC.BrightsideAuthorisation.set_Permissions(String)(
jERfbBrightside.Config.Infrastructure.Web.Security.Impl.MVC.BrightsideAuthorisation.get_AnyPermission()(
qFRmiBrightside.Config.Infrastructure.Web.Security.Impl.MVC.BrightsideAuthorisation.set_AnyPermission(Boolean)(
zGRvtBrightside.Config.Infrastructure.Web.Security.Impl.Api.BrightsideAuthorisation.OnAuthorization(AuthorizationContext)
uHRqmBrightside.Config.Infrastructure.Web.Security.Impl.Api.BrightsideAuthorisation.AuthorizeCore(HttpContextBase)(
fIRb`Brightside.Config.Infrastructure.Web.Security.Impl.Api.BrightsideAuthorisation.get_Permissions()
lJRhfBrightside.Config.Infrastructure.Web.Security.Impl.Api.BrightsideAuthorisation.set_Permissions(String)
hKRdbBrightside.Config.Infrastructure.Web.Security.Impl.Api.BrightsideAuthorisation.get_AnyPermission()
oLRkiBrightside.Config.Infrastructure.Web.Security.Impl.Api.BrightsideAuthorisation.set_AnyPermission(Boolean)
ÉMR¥∆€™√”´ËqBrightside.Config.Infrastructure.Web.Security.Impl.Api.BrightsideAuthorisation.OnAuthorization(HttpActionContext)(
rNRnlBrightside.Config.Infrastructure.Web.Security.Impl.Api.BrightsideAuthorisation.IsAuthorized(HttpContextBase)
ÄOR|ÊÊΩö˛”´ËnBrightside.Config.Infrastructure.Web.Security.Impl.Api.BrightsideAuthorisation.IsAuthorized(HttpActionContext)(lx:\repos\brightside.config\brightside.config.infrastructure.web\security\impl\api\brightsideauthorisation.cs
éPRâ
HQRDBSystem.Web.Http.AuthorizeAttribute.IsAuthorized(HttpActionContext)
KRRGESystem.Web.Http.AuthorizeAttribute.OnAuthorization(HttpActionContext)
USRQOSystem.Web.Http.AuthorizeAttribute.HandleUnauthorizedRequest(HttpActionContext)
MTRIGSystem.Web.Http.AuthorizeAttribute.SkipAuthorization(HttpActionContext)
<UR86System.Web.Http.AuthorizeAttribute.SplitString(String)
4VR0.System.Web.Http.AuthorizeAttribute.get_Roles()
:WR64System.Web.Http.AuthorizeAttribute.set_Roles(String)
5XR1/System.Web.Http.AuthorizeAttribute.get_TypeId()
4YR0.System.Web.Http.AuthorizeAttribute.get_Users()
:ZR64System.Web.Http.AuthorizeAttribute.set_Users(String)c:\users\jonathan.stowell\appdata\local\symbols\src\pdbsrc\public\public\42b47598-1b3c-4204-a801-5d4e7621ffd2\lysa00164\jonathan.stowell\system.web.http\af572201601e434680cacd753e5b26a71\system.web.http\system.web.http\authorizeattribute.cs
`[R\Zx:\repos\brightside.config\brightside.config.infrastructure\security\impl\permissionset.cs
™\R•
v]RrpBrightside.Config.Infrastructure.Web.ControllerFactory.Castle.WindsorDependencyResolver..ctor(IWindsorContainer)
j^RfdBrightside.Config.Infrastructure.Web.ControllerFactory.Castle.WindsorDependencyResolver.BeginScope()
g_RcaBrightside.Config.Infrastructure.Web.ControllerFactory.Castle.WindsorDependencyResolver.Dispose()
n`RjhBrightside.Config.Infrastructure.Web.ControllerFactory.Castle.WindsorDependencyResolver.GetService(Type)
oaRkiBrightside.Config.Infrastructure.Web.ControllerFactory.Castle.WindsorDependencyResolver.GetServices(Type)ux:\repos\brightside.config\brightside.config.infrastructure.web\controllerfactory\castle\windsordependencyresolver.cs
ábRÇ
]cRYWBrightside.Config.Customer.Policy.WebUI.Api.PolicyController..ctor(IPolicyModelService)
YdRUSBrightside.Config.Customer.Policy.WebUI.Api.PolicyController.Get(PolicySearchModel)
MeRIGBrightside.Config.Customer.Policy.WebUI.Api.PolicyController.Get(Int32)
ffRb^Brightside.Config.Customer.Policy.WebUI.Api.PolicySamplerController..ctor(IPolicyModelService)(
bgR^ZBrightside.Config.Customer.Policy.WebUI.Api.PolicySamplerController.Get(PolicySearchModel)(
VhRRNBrightside.Config.Customer.Policy.WebUI.Api.PolicySamplerController.Get(Int32)(
wiRsÎô¸â—‘´ËeBrightside.Config.Customer.Policy.WebUI.Api.PolicySamplerController..ctor(IPolicySamplerModelService)(Zx:\repos\brightside.config\brightside.config.customer.policy.webui\api\policycontroller.cs
ˇjR˙
gkRcaBrightside.Config.Customer.Policy.WebUI.Api.PolicyEventController..ctor(IPolicyEventModelService)
ZlRVTBrightside.Config.Customer.Policy.WebUI.Api.PolicyEventController.GetByPolicy(Int32)
RmRNLBrightside.Config.Customer.Policy.WebUI.Api.PolicyEventController.Get(Int32)_x:\repos\brightside.config\brightside.config.customer.policy.webui\api\policyeventcontroller.cs
©nR§
HoRDBBrightside.Config.Example.WebUI.Controllers.PostController.Index()Xx:\repos\brightside.config\brightside.config.example.webui\controllers\postcontroller.cs
åpRá
PqRLJBrightside.Config.User.Account.WebUI.Controllers.AccountController.Login()
QrRMKBrightside.Config.User.Account.WebUI.Controllers.AccountController.Logout()`x:\repos\brightside.config\brightside.config.user.account.webui\controllers\accountcontroller.cs
¡sRº
YtRUSBrightside.Config.Customer.Policy.WebUI.Controllers.PolicySamplerController.Index()_x:\repos\brightside.config\brightside.config.customer.policy.webui\controllers\policysampler.cs
ÀuR∆
YvRUSBrightside.Config.Customer.Policy.WebUI.Controllers.PolicySamplerController.Index()ix:\repos\brightside.config\brightside.config.customer.policy.webui\controllers\policysamplercontroller.cs
hwRdbx:\repos\brightside.config\brightside.config.customer.policy.service\ipolicysamplermodelservice.cs
ŸxR‘
LyRHFBrightside.Config.Customer.Policy.Models.PolicyEventViewModel.get_Id()
QzRMKBrightside.Config.Customer.Policy.Models.PolicyEventViewModel.set_Id(Int32)
R{RNLBrightside.Config.Customer.Policy.Models.PolicyEventViewModel.get_PolicyId()
W|RSQBrightside.Config.Customer.Policy.Models.PolicyEventViewModel.set_PolicyId(Int32)
U}RQOBrightside.Config.Customer.Policy.Models.PolicyEventViewModel.get_Description()
[~RWUBrightside.Config.Customer.Policy.Models.PolicyEventViewModel.set_Description(String)
VRRPBrightside.Config.Customer.Policy.Models.PolicyEventViewModel.get_CreationDate()
_ÄRZXBrightside.Config.Customer.Policy.Models.PolicyEventViewModel.set_CreationDate(DateTime)
XÅRSQBrightside.Config.Customer.Policy.Models.PolicyEventViewModel.get_EffectiveDate()
`ÇR[YBrightside.Config.Customer.Policy.Models.PolicyEventViewModel.set_EffectiveDate(DateTime)[x:\repos\brightside.config\brightside.config.customer.policy.models\policyeventviewmodel.cs
«ÉR¡
hÑRcaBrightside.Config.Customer.Policy.Service.Impl.PolicyEventModelService..ctor(IPolicyEventService)
SÖRNLBrightside.Config.Customer.Policy.Service.Impl.PolicyEventModelService.Get()
XÜRSQBrightside.Config.Customer.Policy.Service.Impl.PolicyEventModelService.Get(Int32)
`áR[YBrightside.Config.Customer.Policy.Service.Impl.PolicyEventModelService.GetByPolicy(Int32)
^àRYWBrightside.Config.Customer.Policy.Service.Impl.PolicyEventModelService.Map(PolicyEvent)dx:\repos\brightside.config\brightside.config.customer.policy.service\impl\policyeventmodelservice.cs
RâRMKx:\repos\brightside.config\brightside.config.service\ipolicyeventservice.cs
TäROMx:\repos\brightside.config\brightside.config.service\ipolicysamplerservice.cs
Î	ãRÂ	
åRÍﬁ∑¶‡£Â´Ë€Brightside.Config.Service.Impl.PolicySamplerService.Find(Int32,Int32,DateTime,DateTime,Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},String,String,String,Nullable{PolicyStatusId},Nullable{CoverType})(
ZçRUQBrightside.Config.Service.Impl.PolicySamplerService..ctor(Func{ComPolicySampler})(
NéRIªªöŸ¢Â´Ë;Brightside.Config.Service.Impl.PolicySamplerService..ctor()(
èRÍï˚ù·ÂÂ´Ë€Brightside.Config.Service.Impl.PolicySamplerService.Find(Int64,Int32,DateTime,DateTime,Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},String,String,String,Nullable{PolicyStatusId},Nullable{CoverType})(Qx:\repos\brightside.config\brightside.config.service\impl\policysamplerservice.cs
œêR…
rëRmá¨ˇï•Â´Ë_Brightside.Config.Service.Installers.ServiceInstaller.Register(IBootstrapperContainerExtension)(Sx:\repos\brightside.config\brightside.config.service\installers\serviceinstaller.cs
”íRÕ
HìRCABrightside.Config.Customer.Policy.Models.PolicyViewModel.get_Id()
MîRHFBrightside.Config.Customer.Policy.Models.PolicyViewModel.set_Id(Int32)
MïRHFBrightside.Config.Customer.Policy.Models.PolicyViewModel.get_Product()
SñRNLBrightside.Config.Customer.Policy.Models.PolicyViewModel.set_Product(String)
RóRMKBrightside.Config.Customer.Policy.Models.PolicyViewModel.get_PolicyNumber()
XòRSQBrightside.Config.Customer.Policy.Models.PolicyViewModel.set_PolicyNumber(String)
YôRTRBrightside.Config.Customer.Policy.Models.PolicyViewModel.get_InsurerPolicyNumber()
_öRZXBrightside.Config.Customer.Policy.Models.PolicyViewModel.set_InsurerPolicyNumber(String)
NõRIGBrightside.Config.Customer.Policy.Models.PolicyViewModel.get_Proposer()
TúROMBrightside.Config.Customer.Policy.Models.PolicyViewModel.set_Proposer(String)
JùRECBrightside.Config.Customer.Policy.Models.PolicyViewModel.get_From()
RûRMKBrightside.Config.Customer.Policy.Models.PolicyViewModel.set_From(DateTime)
HüRCABrightside.Config.Customer.Policy.Models.PolicyViewModel.get_To()
P†RKIBrightside.Config.Customer.Policy.Models.PolicyViewModel.set_To(DateTime)
L°RGEBrightside.Config.Customer.Policy.Models.PolicyViewModel.get_Status()
R¢RMKBrightside.Config.Customer.Policy.Models.PolicyViewModel.set_Status(String)
Q£RLHBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.get_Id()(
V§RQMBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.set_Id(Int32)(
U•RPLBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.get_Policy()(
Z¶RUQBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.set_Policy(Int32)(
XßRSOBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.get_PolicyIds()(
]®RXTBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.set_PolicyIds(Int32)(
V©RQMBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.get_Results()(
[™RVRBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.set_Results(Int32)(
d´R_øÇ∂Œ√‘´ËQBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.get_ResultCount()(
a¨R\øÇ∂Œ√‘´ËNBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.get_Products()(
g≠RbøÇ∂Œ√‘´ËTBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.set_Products(String)(
eÆR`øÇ∂Œ√‘´ËRBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.get_Underwriters()(
kØRføÇ∂Œ√‘´ËXBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.set_Underwriters(String)(
c∞R^øÇ∂Œ√‘´ËPBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.get_Extensions()(
i±RdøÇ∂Œ√‘´ËVBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.set_Extensions(String)(
g≤RbøÇ∂Œ√‘´ËTBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.get_PolicyStatuses()(
m≥RhøÇ∂Œ√‘´ËZBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.set_PolicyStatuses(String)(
c¥R^øÇ∂Œ√‘´ËPBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.get_CoverTypes()(
iµRdøÇ∂Œ√‘´ËVBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.set_CoverTypes(String)(Vx:\repos\brightside.config\brightside.config.customer.policy.models\policyviewmodel.cs
ê
∂Rä

T∑ROMBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.get_Results()
Y∏RTRBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.set_Results(Int32)
XπRSQBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.get_ResultCount()
U∫RPNBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.get_Products()
[ªRVTBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.set_Products(String)
YºRTRBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.get_Underwriters()
_ΩRZXBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.set_Underwriters(String)
WæRRPBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.get_Extensions()
]øRXVBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.set_Extensions(String)
[¿RVTBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.get_PolicyStatuses()
a¡R\ZBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.set_PolicyStatuses(String)
W¬RRPBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.get_CoverTypes()
]√RXVBrightside.Config.Customer.Policy.Models.PolicySamplerViewModel.set_CoverTypes(String)]x:\repos\brightside.config\brightside.config.customer.policy.models\policysamplerviewmodel.cs
€
ƒR’

Ö≈RˇÃÇÎ⁄Ã‘´ËBrightside.Config.Customer.Policy.Service.Impl.PolicySamplerModelService.Find(Int32,Int32,DateTime,DateTime,Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},String,String,String,Nullable{PolicyStatusId},Nullable{CoverType})(
x∆RsÿÑå⁄›Â´ËeBrightside.Config.Customer.Policy.Service.Impl.PolicySamplerModelService..ctor(IPolicySamplerService)(
a«R\ÓÍí§”Â´ËNBrightside.Config.Customer.Policy.Service.Impl.PolicySamplerModelService.Get()(
Ö»Rˇ¬ñÆÛ‰Â´ËBrightside.Config.Customer.Policy.Service.Impl.PolicySamplerModelService.Find(Int64,Int32,DateTime,DateTime,Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},String,String,String,Nullable{PolicyStatusId},Nullable{CoverType})(fx:\repos\brightside.config\brightside.config.customer.policy.service\impl\policysamplermodelservice.cs
£…Rù
^ RYWBrightside.Config.Customer.Policy.Service.Impl.PolicyModelService..ctor(IPolicyService)
NÀRIGBrightside.Config.Customer.Policy.Service.Impl.PolicyModelService.Get()
SÃRNLBrightside.Config.Customer.Policy.Service.Impl.PolicyModelService.Get(Int32)
_ÕRZXBrightside.Config.Customer.Policy.Service.Impl.PolicyModelService.Get(PolicySearchModel)
TŒROMBrightside.Config.Customer.Policy.Service.Impl.PolicyModelService.Map(Policy)_x:\repos\brightside.config\brightside.config.customer.policy.service\impl\policymodelservice.cs
”œRÕ
Ü–RÄ„õÙÊŒ‘´ËrBrightside.Config.Accounts.CPR.Service.Installers.PolicyServiceInstaller.Register(IBootstrapperContainerExtension)(
W—RRPBrightside.Config.Accounts.CPR.Service.Installers.PolicyServiceInstaller.Reset()ix:\repos\brightside.config\brightside.config.customer.policy.service\installers\policyserviceinstaller.cs
¥“RÆ
x”RsÇ»‘å·Â´ËeBrightside.Config.Customer.Policy.WebUI.Api.PolicySamplerController..ctor(IPolicySamplerModelService)(
\‘RW±®¶‰Â´ËIBrightside.Config.Customer.Policy.WebUI.Api.PolicySamplerController.Get()(
ˇ’R˘√‰¬ˇ∆Â´ËÍBrightside.Config.Customer.Policy.WebUI.Api.PolicySamplerController.Get(Int32,Int32,DateTime,DateTime,Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},String,String,String,Nullable{PolicyStatusId},Nullable{CoverType})(
˛÷R¯ññÖº…Â´ËÈBrightside.Config.Customer.Policy.WebUI.Api.PolicySamplerController.Po(Int32,Int32,DateTime,DateTime,Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},String,String,String,Nullable{PolicyStatusId},Nullable{CoverType})(
Ä◊R˙™â∫æ…Â´ËÎBrightside.Config.Customer.Policy.WebUI.Api.PolicySamplerController.Post(Int32,Int32,DateTime,DateTime,Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Int32},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},Nullable{Boolean},String,String,String,Nullable{PolicyStatusId},Nullable{CoverType})(
gÿRb^Brightside.Config.Customer.Policy.WebUI.Api.PolicySamplerController..ctor(IPolicyModelService)(
cŸR^ZBrightside.Config.Customer.Policy.WebUI.Api.PolicySamplerController.Get(PolicySearchModel)(
W⁄RRNBrightside.Config.Customer.Policy.WebUI.Api.PolicySamplerController.Get(Int32)(
†€Rö∞íŒı‡Â´ËãBrightside.Config.Customer.Policy.WebUI.Api.PolicySamplerController..ctor(IPolicySamplerModelService,IAccessTheCurrentUser{BrightsideUser})(
†‹Rö∑Øòõ·Â´ËãBrightside.Config.Customer.Policy.WebUI.Api.PolicySamplerController..ctor(IAccessTheCurrentUser{BrightsideUser},IPolicySamplerModelService)(ax:\repos\brightside.config\brightside.config.customer.policy.webui\api\policysamplercontroller.cs
Å›R˚
@ﬁR;9Brightside.Config.ViewModels.PolicySearchModel.get_Page()
EﬂR@>Brightside.Config.ViewModels.PolicySearchModel.set_Page(Int32)
B‡R=;Brightside.Config.ViewModels.PolicySearchModel.get_Policy()
J·RECBrightside.Config.ViewModels.PolicySearchModel.set_Policy(Nullable)
E‚R@>Brightside.Config.ViewModels.PolicySearchModel.get_Reference()
K„RFDBrightside.Config.ViewModels.PolicySearchModel.set_Reference(String)Lx:\repos\brightside.devcom\brightside.config.viewmodels\policysearchmodel.cs
S‰RNLx:\repos\brightside.devcom\brightside.config.data\iaccountentryrepository.cs
∏ÂR≤
6ÊR1/Brightside.Config.Data.IUnitOfWork.get_Config()
6ÁR1/Brightside.Config.Data.IUnitOfWork.get_System()@x:\repos\brightside.devcom\brightside.config.data\iunitofwork.cs
ëËRã
<ÈR75Brightside.Config.Data.Maps.UserPermissionMap..ctor()Kx:\repos\brightside.devcom\brightside.config.data\maps\userpermissionmap.cs
•ÍRü
lÎRg≠”ˇê§È¨ËYBrightside.Config.Data.Installers.DataInstaller.Register(IBootstrapperContainerExtension)(
`ÏR[YBrightside.DevCom.Data.Installers.DataInstaller.Register(IBootstrapperContainerExtension)Mx:\repos\brightside.devcom\brightside.config.data\installers\datainstaller.cs
RÌRMKx:\repos\brightside.devcom\brightside.config.data\ipolicyeventrepository.cs
éÓRà
tÔRomBrightside.Config.Data.Impl.Repositories.AccountEntryRepository..ctor(IDatabaseContextFactory{ConfigContext})
cR^\Brightside.Config.Data.Impl.Repositories.AccountEntryRepository.Include(DbSet{AccountEntry})
`ÒR[YBrightside.Config.Data.Impl.Repositories.AccountEntryRepository.Get(Int32,CPRSearchModel)
jÚRecBrightside.Config.Data.Impl.Repositories.AccountEntryRepository.GetByPolicyPaged(Int32,Int32,Int32)]x:\repos\brightside.devcom\brightside.config.data\impl\repositories\accountentryrepository.cs
ƒ	ÛRæ	
\ÙRWÙ⁄∂”òÈ¨ËIBrightside.Config.Data.Impl.ConfigContext.OnModelCreating(DbModelBuilder)(
>ıR95Brightside.Config.Data.Impl.ConfigContext.get_Posts()(
CˆR>:Brightside.Config.Data.Impl.ConfigContext.set_Posts(DbSet)(
@˜R;7Brightside.Config.Data.Impl.ConfigContext.get_Comment()(
E¯R@<Brightside.Config.Data.Impl.ConfigContext.set_Comment(DbSet)(
G˘RB>Brightside.Config.Data.Impl.ConfigContext.get_AccountEntries()(
L˙RGCBrightside.Config.Data.Impl.ConfigContext.set_AccountEntries(DbSet)(
E˚R@<Brightside.Config.Data.Impl.ConfigContext.get_PolicyEvents()(
J¸REABrightside.Config.Data.Impl.ConfigContext.set_PolicyEvents(DbSet)(
?˝R:6Brightside.Config.Data.Impl.ConfigContext.get_Policy()(
D˛R?;Brightside.Config.Data.Impl.ConfigContext.set_Policy(DbSet)(
PˇRKIBrightside.DevCom.Data.Impl.ConfigContext.OnModelCreating(DbModelBuilder)
<ÄR75Brightside.DevCom.Data.Impl.ConfigContext.get_Posts()
AÅR<:Brightside.DevCom.Data.Impl.ConfigContext.set_Posts(DbSet)
>ÇR97Brightside.DevCom.Data.Impl.ConfigContext.get_Comment()
CÉR><Brightside.DevCom.Data.Impl.ConfigContext.set_Comment(DbSet)Gx:\repos\brightside.devcom\brightside.config.data\impl\configcontext.cs
MÑRHFx:\repos\brightside.devcom\brightside.config.data\isystemunitofwork.cs
NÖRIGx:\repos\brightside.devcom\brightside.config.data\icommentrepository.cs
ªÜRµ
náRieBrightside.Config.Data.Impl.Repositories.PostRepository..ctor(IDatabaseContextFactory{ConfigContext})(
làRgeBrightside.DevCom.Data.Impl.Repositories.PostRepository..ctor(IDatabaseContextFactory{ConfigContext})Ux:\repos\brightside.devcom\brightside.config.data\impl\repositories\postrepository.cs
™âR§
näRigBrightside.Config.Infrastructure.Data.Repositories.Impl.Repository`2..ctor(IDatabaseContextFactory{T1})
UãRPNBrightside.Config.Infrastructure.Data.Repositories.Impl.Repository`2.Create(T)
ZåRUSBrightside.Config.Infrastructure.Data.Repositories.Impl.Repository`2.Delete(Object)
UçRPNBrightside.Config.Infrastructure.Data.Repositories.Impl.Repository`2.Delete(T)
oéRjhBrightside.Config.Infrastructure.Data.Repositories.Impl.Repository`2.Delete(Expression{Func{T,Boolean}})
UèRPNBrightside.Config.Infrastructure.Data.Repositories.Impl.Repository`2.Update(T)`x:\repos\brightside.devcom\brightside.config.infrastructure\data\repositories\impl\repository.cs
SêRNLx:\repos\brightside.devcom\brightside.config.service\iaccountentryservice.cs
MëRHFx:\repos\brightside.devcom\brightside.config.service\ipolicyservice.cs
ÁíR·
LìRGEBrightside.Config.Service.Impl.AccountEntryService..ctor(IUnitOfWork)
NîRIGBrightside.Config.Service.Impl.AccountEntryService.Create(AccountEntry)
?ïR:8Brightside.Config.Service.Impl.AccountEntryService.Get()
SñRNLBrightside.Config.Service.Impl.AccountEntryService.Get(Int32,CPRSearchModel)
YóRTRBrightside.Config.Service.Impl.AccountEntryService.GetAllPaged(Int32,Int32,SortBy)
dòR_]Brightside.Config.Service.Impl.AccountEntryService.GetByPolicyPaged(Int32,Int32,Int32,SortBy)
HôRCABrightside.Config.Service.Impl.AccountEntryService.GetById(Int32)
NöRIGBrightside.Config.Service.Impl.AccountEntryService.Update(AccountEntry)Px:\repos\brightside.devcom\brightside.config.service\impl\accountentryservice.cs
∑õR±
rúRm„∆ÃçÈ¨Ë_Brightside.Config.Service.Installers.ServiceInstaller.Register(IBootstrapperContainerExtension)(
fùRa_Brightside.DevCom.Service.Installers.ServiceInstaller.Register(IBootstrapperContainerExtension)Sx:\repos\brightside.devcom\brightside.config.service\installers\serviceinstaller.cs
dûR_]x:\repos\brightside.devcom\brightside.config.infrastructure\service\iuserpermissionservice.cs
—üRÀ
o†RjhBrightside.Config.Data.Impl.Repositories.CommentRepository..ctor(IDatabaseContextFactory{ConfigContext})Xx:\repos\brightside.devcom\brightside.config.data\impl\repositories\commentrepository.cs
K°RFDx:\repos\brightside.devcom\brightside.config.data\ipostrepository.cs
ê¢Rä
I£RD@Brightside.Config.Data.IConfigUnitOfWork.get_CommentRepository()(
F§RA=Brightside.Config.Data.IConfigUnitOfWork.get_PostRepository()(
N•RIEBrightside.Config.Data.IConfigUnitOfWork.get_AccountEntryRepository()(
H¶RC?Brightside.Config.Data.IConfigUnitOfWork.get_PolicyRepository()(
MßRHDBrightside.Config.Data.IConfigUnitOfWork.get_PolicyEventRepository()(
D®R?=Brightside.DevCom.Data.IConfigUnitOfWork.get_PostRepository()Fx:\repos\brightside.devcom\brightside.config.data\iconfigunitofwork.cs
∫©R¥
a™R\XBrightside.Config.Example.WebUI.Handlers.PostWasUpdatedHandler..ctor(IConnectionManager)(
^´RYUBrightside.Config.Example.WebUI.Handlers.PostWasUpdatedHandler.Handle(PostWasUpdated)(
i¨Rd`Brightside.Config.Example.WebUI.Handlers.PostWasUpdatedHandler.OnError(PostWasUpdated,Exception)(
_≠RZXBrightside.DevCom.Example.WebUI.Handlers.PostWasUpdatedHandler..ctor(IConnectionManager)
\ÆRWUBrightside.DevCom.Example.WebUI.Handlers.PostWasUpdatedHandler.Handle(PostWasUpdated)
gØRb`Brightside.DevCom.Example.WebUI.Handlers.PostWasUpdatedHandler.OnError(PostWasUpdated,Exception)\x:\repos\brightside.devcom\brightside.config.example.webui\handlers\postwasupdatedhandler.cs
÷∞R–
>±R97Brightside.DevCom.Events.Post.PostWasCreated.get_Post()
B≤R=;Brightside.DevCom.Events.Post.PostWasCreated.set_Post(Post)Jx:\repos\brightside.devcom\brightside.config.events\post\postwascreated.cs
Q≥RLJx:\repos\brightside.devcom\brightside.config.events\post\postwasupdated.cs
U¥RPNx:\repos\brightside.devcom\brightside.config.events\properties\assemblyinfo.cs
πµR≥
V∂RQMBrightside.Config.Example.WebUI.Tests.Commands.UpdatePostCommandTests.Setup()(
Y∑RTPBrightside.Config.Example.WebUI.Tests.Commands.UpdatePostCommandTests.TearDown()(
Z∏RUSBrightside.Config.Example.WebUI.Tests.Commands.UpdatePostCommandTests.InvalidPost()
XπRSQBrightside.Config.Example.WebUI.Tests.Commands.UpdatePostCommandTests.ValidPost()
T∫ROMBrightside.DevCom.Example.WebUI.Tests.Commands.UpdatePostCommandTests.Setup()
WªRRPBrightside.DevCom.Example.WebUI.Tests.Commands.UpdatePostCommandTests.TearDown()
ZºRUSBrightside.DevCom.Example.WebUI.Tests.Commands.UpdatePostCommandTests.InvalidPost()
XΩRSQBrightside.DevCom.Example.WebUI.Tests.Commands.UpdatePostCommandTests.ValidPost()cx:\repos\brightside.devcom\brightside.config.example.webui.tests\commands\updatepostcommandtests.cs
¸
æRˆ

”øRÕﬂ∞ëüüÈ¨ËæBrightside.Config.Data.Impl.ConfigUnitOfWork..ctor(IDatabaseContextFactory{ConfigContext},IAccountEntryRepository,ICommentRepository,IPolicyEventRepository,IPolicyRepository,IPostRepository)(
?¿R:6Brightside.Config.Data.Impl.ConfigUnitOfWork.Dispose()(
<¡R73Brightside.Config.Data.Impl.ConfigUnitOfWork.Save()(
F¬RA=Brightside.Config.Data.Impl.ConfigUnitOfWork.Dispose(Boolean)(
M√RHDBrightside.Config.Data.Impl.ConfigUnitOfWork.get_CommentRepository()(
JƒREABrightside.Config.Data.Impl.ConfigUnitOfWork.get_PostRepository()(
R≈RMIBrightside.Config.Data.Impl.ConfigUnitOfWork.get_AccountEntryRepository()(
L∆RGCBrightside.Config.Data.Impl.ConfigUnitOfWork.get_PolicyRepository()(
Q«RLHBrightside.Config.Data.Impl.ConfigUnitOfWork.get_PolicyEventRepository()(
}»Rx‰§£≈üÈ¨ËjBrightside.Config.Data.Impl.ConfigUnitOfWork..ctor(IDatabaseContextFactory{ConfigContext},IPostRepository)(
q…RljBrightside.DevCom.Data.Impl.ConfigUnitOfWork..ctor(IDatabaseContextFactory{ConfigContext},IPostRepository)
= R86Brightside.DevCom.Data.Impl.ConfigUnitOfWork.Dispose()
:ÀR53Brightside.DevCom.Data.Impl.ConfigUnitOfWork.Save()
DÃR?=Brightside.DevCom.Data.Impl.ConfigUnitOfWork.Dispose(Boolean)
HÕRCABrightside.DevCom.Data.Impl.ConfigUnitOfWork.get_PostRepository()Jx:\repos\brightside.devcom\brightside.config.data\impl\configunitofwork.cs
ôŒRì
dœR_]Brightside.Config.Data.Impl.UnitOfWork..ctor(Func{IConfigUnitOfWork},Func{ISystemUnitOfWork})
7–R20Brightside.Config.Data.Impl.UnitOfWork.Dispose()
4—R/-Brightside.Config.Data.Impl.UnitOfWork.Save()
:“R53Brightside.Config.Data.Impl.UnitOfWork.get_Config()
:”R53Brightside.Config.Data.Impl.UnitOfWork.get_System()Dx:\repos\brightside.devcom\brightside.config.data\impl\unitofwork.cs
V‘RQOx:\repos\brightside.devcom\brightside.config.infrastructure\data\iunitofwork.cs
í’Rå
{÷RvrBrightside.Config.Example.WebUI.Commands.UpdatePostCommand..ctor(IEventStream,IPostService,IProvidePostValidators)(
M◊RHDBrightside.Config.Example.WebUI.Commands.UpdatePostCommand.Execute()(
NÿRIEBrightside.Config.Example.WebUI.Commands.UpdatePostCommand.Validate()(
KŸRFBBrightside.Config.Example.WebUI.Commands.UpdatePostCommand.Prime()(
P⁄RKGBrightside.Config.Example.WebUI.Commands.UpdatePostCommand.get_Author()(
V€RQMBrightside.Config.Example.WebUI.Commands.UpdatePostCommand.set_Author(String)(
Q‹RLHBrightside.Config.Example.WebUI.Commands.UpdatePostCommand.get_Content()(
W›RRNBrightside.Config.Example.WebUI.Commands.UpdatePostCommand.set_Content(String)(
LﬁRGCBrightside.Config.Example.WebUI.Commands.UpdatePostCommand.get_Id()(
QﬂRLHBrightside.Config.Example.WebUI.Commands.UpdatePostCommand.set_Id(Int32)(
V‡RQMBrightside.Config.Example.WebUI.Commands.UpdatePostCommand.get_IsSuccessful()(
N·RIEBrightside.Config.Example.WebUI.Commands.UpdatePostCommand.get_Post()(
R‚RMIBrightside.Config.Example.WebUI.Commands.UpdatePostCommand.set_Post(Post)(
Q„RLHBrightside.Config.Example.WebUI.Commands.UpdatePostCommand.get_Results()(
a‰R\XBrightside.Config.Example.WebUI.Commands.UpdatePostCommand.set_Results(ValidationResult)(
UÂRPLBrightside.Config.Example.WebUI.Commands.UpdatePostCommand.get_HasExecuted()(
yÊRtrBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand..ctor(IEventStream,IPostService,IProvidePostValidators)
KÁRFDBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.Execute()
LËRGEBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.Validate()
IÈRDBBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.Prime()
NÍRIGBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.get_Author()
TÎROMBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.set_Author(String)
OÏRJHBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.get_Content()
UÌRPNBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.set_Content(String)
JÓRECBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.get_Id()
OÔRJHBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.set_Id(Int32)
TROMBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.get_IsSuccessful()
LÒRGEBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.get_Post()
PÚRKIBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.set_Post(Post)
OÛRJHBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.get_Results()
_ÙRZXBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.set_Results(ValidationResult)
SıRNLBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.get_HasExecuted()Xx:\repos\brightside.devcom\brightside.config.example.webui\commands\updatepostcommand.cs
‚ˆR‹
F˜RA=Brightside.Config.Service.Impl.PostService..ctor(IUnitOfWork)(
J¯RE›åˆ≥®È¨Ë7Brightside.Config.Service.Impl.PostService.Create(Post)(
C˘R>›˛®∫®È¨Ë0Brightside.Config.Service.Impl.PostService.Get()(
L˙RGöˆﬂ¬®È¨Ë9Brightside.Config.Service.Impl.PostService.GetById(Int32)(
J˚REÎπ∫Ã®È¨Ë7Brightside.Config.Service.Impl.PostService.Update(Post)(
V¸RQ‰…‘†®È¨ËCBrightside.Config.Service.Impl.PostService..ctor(IConfigUnitOfWork)(
J˝RECBrightside.DevCom.Service.Impl.PostService..ctor(IConfigUnitOfWork)
>˛R97Brightside.DevCom.Service.Impl.PostService.Create(Post)
7ˇR20Brightside.DevCom.Service.Impl.PostService.Get()
@ÄR;9Brightside.DevCom.Service.Impl.PostService.GetById(Int32)
>ÅR97Brightside.DevCom.Service.Impl.PostService.Update(Post)Hx:\repos\brightside.devcom\brightside.config.service\impl\postservice.cs
ùÇRó
îÉRéãBrightside.Config.Infrastructure.Web.Security.Impl.ProfileManagement.Login(IPrincipalFactory,Action{IPrincipal},Action{IUser},IUser,String)
ÜÑRÄ~Brightside.Config.Infrastructure.Web.Security.Impl.ProfileManagement.Login(IPrincipalFactory,HttpContext,IUser,String,Boolean)
êÖRäáBrightside.Config.Infrastructure.Web.Security.Impl.ProfileManagement.RestoreUserFromSession`1(IPrincipalFactory,IUserPermissionService)bx:\repos\brightside.devcom\brightside.config.infrastructure.web\security\impl\profilemanagement.cs
µÜRØ
cáR^ZBrightside.Config.Infrastructure.Web.Helpers.Impl.ProvideRequestContext.get_IsApiRequest()(
aàR\ZBrightside.DevCom.Infrastructure.Web.Helpers.Impl.ProvideRequestContext.get_IsApiRequest()ex:\repos\brightside.devcom\brightside.config.infrastructure.web\helpers\impl\providerequestcontext.cs
†âRö
bäR]YBrightside.Config.Infrastructure.Eventing.Extensions.Raise`1(IEventStream,Action{TEvent})(
`ãR[YBrightside.DevCom.Infrastructure.Eventing.Extensions.Raise`1(IEventStream,Action{TEvent})Rx:\repos\brightside.devcom\brightside.config.infrastructure\eventing\extensions.cs
€åR’
eçR`\Brightside.Config.Infrastructure.Eventing.WindsorActivationStrategy..ctor(IWindsorContainer)(
\éRWSBrightside.Config.Infrastructure.Eventing.WindsorActivationStrategy.GetHandlers`1()(
uèRplBrightside.Config.Infrastructure.Eventing.WindsorActivationStrategy.OnHandlerExecuted`1(IHandle{TEventType})(
cêR^\Brightside.DevCom.Infrastructure.Eventing.WindsorActivationStrategy..ctor(IWindsorContainer)
ZëRUSBrightside.DevCom.Infrastructure.Eventing.WindsorActivationStrategy.GetHandlers`1()
síRnlBrightside.DevCom.Infrastructure.Eventing.WindsorActivationStrategy.OnHandlerExecuted`1(IHandle{TEventType})ax:\repos\brightside.devcom\brightside.config.infrastructure\eventing\windsoractivationstrategy.cs
gìRb`x:\repos\brightside.devcom\brightside.config.infrastructure.web\controllers\securedcontroller.cs
ÙîRÓ
RïRMIBrightside.Config.WebUI.MvcApplication.Application_PostAuthorizeRequest()(
añR\XBrightside.Config.WebUI.MvcApplication.Application_AcquireRequestState(Object,EventArgs)(
MóRHœœëœÆÈ¨Ë:Brightside.Config.WebUI.MvcApplication.Application_Start()(
AòR<8Brightside.Config.WebUI.MvcApplication.FakeUserSession()(
FôRA=Brightside.Config.WebUI.MvcApplication.get_PrincipalFactory()(
KöRFBBrightside.Config.WebUI.MvcApplication.get_UserPermissionService()(
DõR?;Brightside.Config.WebUI.MvcApplication.get_RequestContext()(
AúR<:Brightside.DevCom.WebUI.MvcApplication.Application_Start()
BùR=;Brightside.DevCom.WebUI.MvcApplication.get_RequestContext()Ax:\repos\brightside.devcom\brightside.config.webui\global.asax.cs
ÛûRÌ
DüR?;Brightside.Config.WebUI.Installers.WebUIStartupTask.Reset()(
L†RGªŒ·˜ºÈ¨Ë9Brightside.Config.WebUI.Installers.WebUIStartupTask.Run()(
B°R=;Brightside.DevCom.WebUI.Installers.WebUIStartupTask.Reset()
@¢R;9Brightside.DevCom.WebUI.Installers.WebUIStartupTask.Run()Qx:\repos\brightside.devcom\brightside.config.webui\installers\webuistartuptask.cs
Ÿ£R”
n§RieBrightside.Config.Example.WebUI.Installers.ExampleInstaller.Register(IBootstrapperContainerExtension)(
L•RGCBrightside.Config.Example.WebUI.Installers.ExampleInstaller.Reset()(
l¶RgeBrightside.DevCom.Example.WebUI.Installers.ExampleInstaller.Register(IBootstrapperContainerExtension)
JßRECBrightside.DevCom.Example.WebUI.Installers.ExampleInstaller.Reset()Yx:\repos\brightside.devcom\brightside.config.example.webui\installers\exampleinstaller.cs
ˇ®R˘
Q©RLHBrightside.Config.Example.WebUI.Installers.RegisterNavigation.get_Path()(
b™R]YBrightside.Config.Example.WebUI.Installers.RegisterNavigation.get_RequireAllPermissions()(
X´RSOBrightside.Config.Example.WebUI.Installers.RegisterNavigation.get_Permissions()(
O¨RJHBrightside.DevCom.Example.WebUI.Installers.RegisterNavigation.get_Path()
`≠R[YBrightside.DevCom.Example.WebUI.Installers.RegisterNavigation.get_RequireAllPermissions()
VÆRQOBrightside.DevCom.Example.WebUI.Installers.RegisterNavigation.get_Permissions()[x:\repos\brightside.devcom\brightside.config.example.webui\installers\registernavigation.cs
˛ØR¯
¶∞R†õBrightside.Config.Infrastructure.Web.Plugin.Navigation.Impl.ProvideNavigation..ctor(IEnumerable{IRegisterNavigation},IAccessTheCurrentUser{BrightsideUser})(
p±Rkª¯Ü«πÈ¨Ë]Brightside.Config.Infrastructure.Web.Plugin.Navigation.Impl.ProvideNavigation.GetNavigation()(
â≤RÉˇ™£™µÈ¨ËuBrightside.Config.Infrastructure.Web.Plugin.Navigation.Impl.ProvideNavigation..ctor(IEnumerable{IRegisterNavigation})(
|≥RwuBrightside.DevCom.Infrastructure.Web.Plugin.Navigation.Impl.ProvideNavigation..ctor(IEnumerable{IRegisterNavigation})
d¥R_]Brightside.DevCom.Infrastructure.Web.Plugin.Navigation.Impl.ProvideNavigation.GetNavigation()kx:\repos\brightside.devcom\brightside.config.infrastructure.web\plugin\navigation\impl\providenavigation.cs
¢µRú
\∂RWUBrightside.Config.Infrastructure.Web.Plugin.Navigation.IRegisterNavigation.get_Path()
m∑RhfBrightside.Config.Infrastructure.Web.Plugin.Navigation.IRegisterNavigation.get_RequireAllPermissions()
c∏R^\Brightside.Config.Infrastructure.Web.Plugin.Navigation.IRegisterNavigation.get_Permissions()hx:\repos\brightside.devcom\brightside.config.infrastructure.web\plugin\navigation\iregisternavigation.cs
ÜπRÄ
U∫RPNBrightside.Config.WebUI.Installers.RegisterLegacyAccountsNavigation.get_Path()
fªRa_Brightside.Config.WebUI.Installers.RegisterLegacyAccountsNavigation.get_RequireAllPermissions()
\ºRWUBrightside.Config.WebUI.Installers.RegisterLegacyAccountsNavigation.get_Permissions()ax:\repos\brightside.devcom\brightside.config.webui\installers\registerlegacyaccountsnavigation.cs
ŒΩR»
GæRB@Brightside.Config.WebUI.Installers.RegisterNavigation.get_Path()
XøRSQBrightside.Config.WebUI.Installers.RegisterNavigation.get_RequireAllPermissions()
N¿RIGBrightside.Config.WebUI.Installers.RegisterNavigation.get_Permissions()Sx:\repos\brightside.devcom\brightside.config.webui\installers\registernavigation.cs
¯¡RÚ
C¬R><Brightside.Config.WebUI.Controllers.HomeController.Details()
S√RNLBrightside.Config.WebUI.Controllers.HomeController.FromPHP(FromPhpViewModel)
AƒR<:Brightside.Config.WebUI.Controllers.HomeController.Index()
A≈R<:Brightside.Config.WebUI.Controllers.HomeController.ToPHP()Px:\repos\brightside.devcom\brightside.config.webui\controllers\homecontroller.cs
Ã∆R∆
M«RHDBrightside.Config.WebUI.Installers.RegisterRoutesStartupTask.Reset()(
K»RFBBrightside.Config.WebUI.Installers.RegisterRoutesStartupTask.Run()(
e…R`¨üñ¬È¨ËRBrightside.Config.WebUI.Installers.RegisterRoutesStartupTask.RegisterApiDefaults()(
X RSOBrightside.Config.WebUI.Installers.RegisterRoutesStartupTask.RegisterDefaults()(
eÀR`´í™Í¬È¨ËRBrightside.Config.WebUI.Installers.RegisterRoutesStartupTask.RegisterMvcDefaults()(
KÃRFDBrightside.DevCom.WebUI.Installers.RegisterRoutesStartupTask.Reset()
IÕRDBBrightside.DevCom.WebUI.Installers.RegisterRoutesStartupTask.Run()
YŒRTRBrightside.DevCom.WebUI.Installers.RegisterRoutesStartupTask.RegisterApiDefaults()
VœRQOBrightside.DevCom.WebUI.Installers.RegisterRoutesStartupTask.RegisterDefaults()
Y–RTRBrightside.DevCom.WebUI.Installers.RegisterRoutesStartupTask.RegisterMvcDefaults()Zx:\repos\brightside.devcom\brightside.config.webui\installers\registerroutesstartuptask.cs
Á—R·
]“RXVBrightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode..ctor()
d”R_]Brightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.Equals(Object)
l‘RgeBrightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.Equals(NavigationNode)
b’R][Brightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.get_Action()
h÷RcaBrightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.set_Action(String)
d◊R_]Brightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.get_Children()
hÿRcaBrightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.set_Children(List)
fŸRa_Brightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.get_Controller()
l⁄RgeBrightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.set_Controller(String)
j€RecBrightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.get_HtmlAttributes()
u‹RpnBrightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.set_HtmlAttributes(IDictionary)
`›R[YBrightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.get_Name()
fﬁRa_Brightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.set_Name(String)
aﬂR\ZBrightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.get_Order()
f‡Ra_Brightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.set_Order(Int32)
g·Rb`Brightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.get_RouteValues()
r‚RmkBrightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.set_RouteValues(IDictionary)
j„ReaBrightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.get_HasLegacyUrl()(
g‰Rb^Brightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.get_LegacyUrl()(
mÂRhdBrightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.set_LegacyUrl(String)(
gÊRb^Brightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.get_HasMvcUrl()(
`ÁR[YBrightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.get_Icon()
fËRa_Brightside.Config.Infrastructure.Web.Plugin.Navigation.Entities.NavigationNode.set_Icon(String)lx:\repos\brightside.devcom\brightside.config.infrastructure.web\plugin\navigation\entities\navigationnode.cs
]ÈRXVx:\repos\brightside.devcom\brightside.config.webui\controllers\navigationcontroller.cs
ÓÍRË
CÎR><Brightside.DevCom.WebUI.Installers.BundleStartupTask.Reset()
MÏRH¶Ÿµ¸È¨Ë:Brightside.DevCom.WebUI.Installers.BundleStartupTask.Run()(Rx:\repos\brightside.devcom\brightside.devcom.webui\installers\bundlestartuptask.cs
ÕÌR«
XÓRSQBrightside.DevCom.Infrastructure.Castle.HybridPerWebRequestScopedAccessor..ctor()kx:\repos\brightside.devcom\src\brightside.devcom.infrastructure\castle\hybridperwebrequestscopedaccessor.cs
≠ÔRß
cR^ZBrightside.DevCom.Infrastructure.Plugin.Impl.PluginAssemblyProvider..ctor(String,String[])(
\ÒRWSBrightside.DevCom.Infrastructure.Plugin.Impl.PluginAssemblyProvider.GetAssemblies()(
`ÚR[WBrightside.DevCom.Infrastructure.Plugin.Impl.PluginAssemblyProvider.GetAssembly(String)(
cÛR^ZBrightside.DevCom.Infrastructure.Plugin.Impl.PluginAssemblyProvider.LoadPluginAssemblies()(
nÙRieBrightside.DevCom.Infrastructure.Plugin.Impl.PluginAssemblyProvider.RegisterAssembly(String,Assembly)(
mıRhdBrightside.DevCom.Infrastructure.Plugin.Impl.PluginAssemblyProvider.TryGetAssembly(String,Assembly&)(
mˆRhdBrightside.DevCom.Infrastructure.Plugin.Impl.PluginAssemblyProvider.get_PluginAssembliesByFullName()(
m˜RhdBrightside.DevCom.Infrastructure.Plugin.Impl.PluginAssemblyProvider.get_pluginAssembliesByFullName()(
w¯RrnBrightside.DevCom.Infrastructure.Plugin.Impl.PluginAssemblyProvider.set_pluginAssembliesByFullName(Dictionary)(ex:\repos\brightside.devcom\src\brightside.devcom.infrastructure\plugin\impl\pluginassemblyprovider.cs
É˘R˝
P˙RKIBrightside.DevCom.Data.Impl.ConfigContext.OnModelCreating(DbModelBuilder)
<˚R75Brightside.DevCom.Data.Impl.ConfigContext.get_Posts()
A¸R<:Brightside.DevCom.Data.Impl.ConfigContext.set_Posts(DbSet)
>˝R97Brightside.DevCom.Data.Impl.ConfigContext.get_Comment()
C˛R><Brightside.DevCom.Data.Impl.ConfigContext.set_Comment(DbSet)
PˇRKIBrightside.DevCom.Data.Impl.DevComContext.OnModelCreating(DbModelBuilder)
<ÄR75Brightside.DevCom.Data.Impl.DevComContext.get_Posts()
AÅR<:Brightside.DevCom.Data.Impl.DevComContext.set_Posts(DbSet)
>ÇR97Brightside.DevCom.Data.Impl.DevComContext.get_Comment()
CÉR><Brightside.DevCom.Data.Impl.DevComContext.set_Comment(DbSet)Kx:\repos\brightside.devcom\src\brightside.devcom.data\impl\configcontext.cs
¥ÑRÆ
SÖRNô‚˜áıÍ¨Ë@Brightside.DevCom.Data.Impl.ConfigDatabaseContextFactory..ctor()(
XÜRSô‚˜áıÍ¨ËEBrightside.DevCom.Data.Impl.ConfigDatabaseContextFactory.GetContext()(
GáRB@Brightside.DevCom.Data.Impl.DevComDatabaseContextFactory..ctor()
XàRS˛ô˙∑¸Í¨ËEBrightside.DevCom.Data.Impl.DevComDatabaseContextFactory.GetContext()(Zx:\repos\brightside.devcom\src\brightside.devcom.data\impl\configdatabasecontextfactory.cs
ÏâRÊ
MäRHıÚ˘∑¸Í¨Ë:Brightside.DevCom.WebUI.MvcApplication.Application_Start()(
NãRIıÚ˘∑¸Í¨Ë;Brightside.DevCom.WebUI.MvcApplication.get_RequestContext()(Ex:\repos\brightside.devcom\src\brightside.devcom.webui\global.asax.cs
•åRü
LçRGCBrightside.DevCom.Service.Impl.PostService..ctor(IConfigUnitOfWork)(
JéREÜ¡˙∑¸Í¨Ë7Brightside.DevCom.Service.Impl.PostService.Create(Post)(
CèR>Ü¡˙∑¸Í¨Ë0Brightside.DevCom.Service.Impl.PostService.Get()(
LêRGÜ¡˙∑¸Í¨Ë9Brightside.DevCom.Service.Impl.PostService.GetById(Int32)(
JëREÜ¡˙∑¸Í¨Ë7Brightside.DevCom.Service.Impl.PostService.Update(Post)(
VíRQ»¸À∆ÙÍ¨ËCBrightside.DevCom.Service.Impl.PostService..ctor(IDevComUnitOfWork)(Lx:\repos\brightside.devcom\src\brightside.devcom.service\impl\postservice.cs
ÚìRÏ
CîR><Brightside.DevCom.WebUI.Installers.BundleStartupTask.Reset()
MïRHÏÀ˘∑¸Í¨Ë:Brightside.DevCom.WebUI.Installers.BundleStartupTask.Run()(Vx:\repos\brightside.devcom\src\brightside.devcom.webui\installers\bundlestartuptask.cs
´ñR•
MóRH≥«ôœ÷Í¨Ë:Brightside.DevCom.WebUI.Controllers.HomeController.Index()(Tx:\repos\brightside.devcom\src\brightside.devcom.webui\controllers\homecontroller.cs
òòRí
KôRFDBrightside.DevCom.WebUI.Installers.RegisterRoutesStartupTask.Reset()
IöRDBBrightside.DevCom.WebUI.Installers.RegisterRoutesStartupTask.Run()
YõRTRBrightside.DevCom.WebUI.Installers.RegisterRoutesStartupTask.RegisterApiDefaults()
VúRQOBrightside.DevCom.WebUI.Installers.RegisterRoutesStartupTask.RegisterDefaults()
eùR`”öçßÿÍ¨ËRBrightside.DevCom.WebUI.Installers.RegisterRoutesStartupTask.RegisterMvcDefaults()(^x:\repos\brightside.devcom\src\brightside.devcom.webui\installers\registerroutesstartuptask.cs
ÄûR˙
[üRVΩ˜√‡ÎÍ¨ËHBrightside.DevCom.Example.WebUI.Installers.RegisterNavigation.get_Path()(
b†R]YBrightside.DevCom.Example.WebUI.Installers.RegisterNavigation.get_RequireAllPermissions()(
V°RQOBrightside.DevCom.Example.WebUI.Installers.RegisterNavigation.get_Permissions()_x:\repos\brightside.devcom\src\brightside.devcom.example.webui\installers\registernavigation.cs
⁄¢R‘
>£R97Brightside.DevCom.Events.Post.PostWasCreated.get_Post()
B§R=;Brightside.DevCom.Events.Post.PostWasCreated.set_Post(Post)Nx:\repos\brightside.devcom\src\brightside.devcom.events\post\postwascreated.cs
ﬁ•Rÿ
D¶R?=Brightside.DevCom.Data.IConfigUnitOfWork.get_PostRepository()
DßR?=Brightside.DevCom.Data.IDevComUnitOfWork.get_PostRepository()Jx:\repos\brightside.devcom\src\brightside.devcom.data\iconfigunitofwork.cs
ö®Rî
F©RA=Brightside.DevCom.Data.IConfigUnitOfWork.get_PostRepository()(Jx:\repos\brightside.devcom\src\brightside.devcom.data\idevcomunitofwork.cs
U™RPNx:\repos\brightside.devcom\src\brightside.devcom.data\impl\configunitofwork.cs
X´RSQx:\repos\brightside.devcom\src\brightside.devcom.data\installers\datainstaller.cs
U¨RPNx:\repos\brightside.devcom\src\brightside.devcom.data\impl\devcomunitofwork.cs
ò≠Rí
RÆRMIBrightside.DevCom.Data.Impl.ConfigContext.OnModelCreating(DbModelBuilder)(
>ØR95Brightside.DevCom.Data.Impl.ConfigContext.get_Posts()(
C∞R>:Brightside.DevCom.Data.Impl.ConfigContext.set_Posts(DbSet)(
@±R;7Brightside.DevCom.Data.Impl.ConfigContext.get_Comment()(
E≤R@<Brightside.DevCom.Data.Impl.ConfigContext.set_Comment(DbSet)(
\≥RWÜ¡˙∑¸Í¨ËIBrightside.DevCom.Data.Impl.DevComContext.OnModelCreating(DbModelBuilder)(
C¥R>:Brightside.DevCom.Data.Impl.DevComContext.set_Posts(DbSet)(
>µR95Brightside.DevCom.Data.Impl.DevComContext.get_Posts()(Kx:\repos\brightside.devcom\src\brightside.devcom.data\impl\devcomcontext.cs
œ∂R…
l∑RgeBrightside.DevCom.Data.Impl.Repositories.PostRepository..ctor(IDatabaseContextFactory{DevComContext})Yx:\repos\brightside.devcom\src\brightside.devcom.data\impl\repositories\postrepository.cs
¨∏R¶
IπRD@Brightside.DevCom.Data.Impl.ConfigDatabaseContextFactory..ctor()(
N∫RIEBrightside.DevCom.Data.Impl.ConfigDatabaseContextFactory.GetContext()(
SªRNÜ¡˙∑¸Í¨Ë@Brightside.DevCom.Data.Impl.DevComDatabaseContextFactory..ctor()(
XºRSÿ¥Ø¡˝Í¨ËEBrightside.DevCom.Data.Impl.DevComDatabaseContextFactory.GetContext()(Zx:\repos\brightside.devcom\src\brightside.devcom.data\impl\devcomdatabasecontextfactory.cs
aΩR\Zx:\repos\brightside.devcom\src\brightside.devcom.webui\controllers\navigationcontroller.cs
úæRñ
ìøRçäBrightside.DevCom.Example.WebUI.Api.PostsController..ctor(IPostService,Func{CreatePostCommand},Func{UpdatePostCommand},IConnectionManager)
@¿R;9Brightside.DevCom.Example.WebUI.Api.PostsController.Get()
E¡R@>Brightside.DevCom.Example.WebUI.Api.PostsController.Get(Int32)
N¬RIGBrightside.DevCom.Example.WebUI.Api.PostsController.Post(PostViewModel)
M√RHFBrightside.DevCom.Example.WebUI.Api.PostsController.Put(PostViewModel)Vx:\repos\brightside.devcom\src\brightside.devcom.knockout.webui\api\postscontroller.cs
ë
ƒRã

y≈RtrBrightside.DevCom.Example.WebUI.Commands.CreatePostCommand..ctor(IEventStream,IPostService,IProvidePostValidators)
K∆RFDBrightside.DevCom.Example.WebUI.Commands.CreatePostCommand.Execute()
L«RGEBrightside.DevCom.Example.WebUI.Commands.CreatePostCommand.Validate()
I»RDBBrightside.DevCom.Example.WebUI.Commands.CreatePostCommand.Prime()
N…RIGBrightside.DevCom.Example.WebUI.Commands.CreatePostCommand.get_Author()
T ROMBrightside.DevCom.Example.WebUI.Commands.CreatePostCommand.set_Author(String)
OÀRJHBrightside.DevCom.Example.WebUI.Commands.CreatePostCommand.get_Content()
UÃRPNBrightside.DevCom.Example.WebUI.Commands.CreatePostCommand.set_Content(String)
SÕRNLBrightside.DevCom.Example.WebUI.Commands.CreatePostCommand.get_HasExecuted()
TŒROMBrightside.DevCom.Example.WebUI.Commands.CreatePostCommand.get_IsSuccessful()
LœRGEBrightside.DevCom.Example.WebUI.Commands.CreatePostCommand.get_Post()
P–RKIBrightside.DevCom.Example.WebUI.Commands.CreatePostCommand.set_Post(Post)
O—RJHBrightside.DevCom.Example.WebUI.Commands.CreatePostCommand.get_Results()
_“RZXBrightside.DevCom.Example.WebUI.Commands.CreatePostCommand.set_Results(ValidationResult)]x:\repos\brightside.devcom\src\brightside.devcom.knockout.webui\commands\createpostcommand.cs
Æ”R®
y‘RtrBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand..ctor(IEventStream,IPostService,IProvidePostValidators)
K’RFDBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.Execute()
L÷RGEBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.Validate()
I◊RDBBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.Prime()
NÿRIGBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.get_Author()
TŸROMBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.set_Author(String)
O⁄RJHBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.get_Content()
U€RPNBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.set_Content(String)
S‹RNLBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.get_HasExecuted()
J›RECBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.get_Id()
OﬁRJHBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.set_Id(Int32)
TﬂROMBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.get_IsSuccessful()
L‡RGEBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.get_Post()
P·RKIBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.set_Post(Post)
O‚RJHBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.get_Results()
_„RZXBrightside.DevCom.Example.WebUI.Commands.UpdatePostCommand.set_Results(ValidationResult)]x:\repos\brightside.devcom\src\brightside.devcom.knockout.webui\commands\updatepostcommand.cs
ˇ‰R˘
IÂRDBBrightside.DevCom.Example.WebUI.Controllers.PostController.Index()
MÊRHFBrightside.DevCom.Example.WebUI.Controllers.KnockoutController.Index()]x:\repos\brightside.devcom\src\brightside.devcom.knockout.webui\controllers\postcontroller.cs
ãÁRÖ
KËRFBBrightside.DevCom.Example.WebUI.Controllers.PostController.Index()(
LÈRGCBrightside.DevCom.Knockout.WebUI.Controllers.PostController.Index()(
NÍRIGBrightside.DevCom.Knockout.WebUI.Controllers.KnockoutController.Index()
QÎRLJBrightside.DevCom.Knockout.WebUI.Controllers.KnockoutController.Computed()
bÏR]¡ŸÂ≈Í±ÆËOBrightside.DevCom.Knockout.WebUI.Controllers.KnockoutController.Subscriptions()(ax:\repos\brightside.devcom\src\brightside.devcom.knockout.webui\controllers\knockoutcontroller.cs
ëÌRã
_ÓRZXBrightside.DevCom.Example.WebUI.Handlers.PostWasCreatedHandler..ctor(IConnectionManager)
\ÔRWUBrightside.DevCom.Example.WebUI.Handlers.PostWasCreatedHandler.Handle(PostWasCreated)
gRb`Brightside.DevCom.Example.WebUI.Handlers.PostWasCreatedHandler.OnError(PostWasCreated,Exception)ax:\repos\brightside.devcom\src\brightside.devcom.knockout.webui\handlers\postwascreatedhandler.cs
VÒRQOx:\repos\brightside.devcom\src\brightside.devcom.knockout.webui\hubs\posthub.cs
ÍÚR‰
xÛRs˙¡ôà±Î¨ËeBrightside.DevCom.Example.WebUI.Installers.ExampleInstaller.Register(IBootstrapperContainerExtension)(
LÙRGCBrightside.DevCom.Example.WebUI.Installers.ExampleInstaller.Reset()(
mıRhfBrightside.DevCom.Knockout.WebUI.Installers.ExampleInstaller.Register(IBootstrapperContainerExtension)
KˆRFDBrightside.DevCom.Knockout.WebUI.Installers.ExampleInstaller.Reset()^x:\repos\brightside.devcom\src\brightside.devcom.knockout.webui\installers\exampleinstaller.cs
ù˜Ró
[¯RVÂﬁöƒ´Î¨ËHBrightside.DevCom.Example.WebUI.Installers.RegisterNavigation.get_Path()(
X˘RSOBrightside.DevCom.Example.WebUI.Installers.RegisterNavigation.get_Permissions()(
b˙R]YBrightside.DevCom.Example.WebUI.Installers.RegisterNavigation.get_RequireAllPermissions()(
\˚RW°„Ñ˙Ç≤ÆËIBrightside.DevCom.Knockout.WebUI.Installers.RegisterNavigation.get_Path()(
W¸RRPBrightside.DevCom.Knockout.WebUI.Installers.RegisterNavigation.get_Permissions()
a˝R\ZBrightside.DevCom.Knockout.WebUI.Installers.RegisterNavigation.get_RequireAllPermissions()`x:\repos\brightside.devcom\src\brightside.devcom.knockout.webui\installers\registernavigation.cs
¶˛R†
HˇRCABrightside.DevCom.Example.WebUI.Models.PostViewModel.get_Author()
NÄRIGBrightside.DevCom.Example.WebUI.Models.PostViewModel.set_Author(String)
IÅRDBBrightside.DevCom.Example.WebUI.Models.PostViewModel.get_Content()
OÇRJHBrightside.DevCom.Example.WebUI.Models.PostViewModel.set_Content(String)
DÉR?=Brightside.DevCom.Example.WebUI.Models.PostViewModel.get_Id()
IÑRDBBrightside.DevCom.Example.WebUI.Models.PostViewModel.set_Id(Int32)Wx:\repos\brightside.devcom\src\brightside.devcom.knockout.webui\models\postviewmodel.cs
∂ÖR∞
äÜRÑÅBrightside.DevCom.Example.WebUI.Validations.Impl.ProvidePostValidators..ctor(Func{CreatePostValidator},Func{UpdatePostValidator})
ZáRUSBrightside.DevCom.Example.WebUI.Validations.Impl.ProvidePostValidators.get_Create()
ZàRUSBrightside.DevCom.Example.WebUI.Validations.Impl.ProvidePostValidators.get_Update()ix:\repos\brightside.devcom\src\brightside.devcom.knockout.webui\validations\impl\providepostvalidators.cs
–âR 
YäRTRBrightside.DevCom.Example.WebUI.Validations.Validators.CreatePostValidator..ctor()mx:\repos\brightside.devcom\src\brightside.devcom.knockout.webui\validations\validators\createpostvalidator.cs
ùãRó
VåRQOBrightside.DevCom.Example.WebUI.Validations.IProvidePostValidators.get_Create()
VçRQOBrightside.DevCom.Example.WebUI.Validations.IProvidePostValidators.get_Update()ex:\repos\brightside.devcom\src\brightside.devcom.knockout.webui\validations\iprovidepostvalidators.cs
‘éRŒ
<èR75Brightside.DevCom.Entities.Posts.Comment.get_Author()
BêR=;Brightside.DevCom.Entities.Posts.Comment.set_Author(String)
=ëR86Brightside.DevCom.Entities.Posts.Comment.get_Content()
CíR><Brightside.DevCom.Entities.Posts.Comment.set_Content(String)
:ìR53Brightside.DevCom.Entities.Posts.Comment.get_Post()
>îR97Brightside.DevCom.Entities.Posts.Comment.set_Post(Post)Jx:\repos\brightside.devcom\src\brightside.devcom.entities\posts\comment.cs
“ïRÃ
ZñRUSBrightside.DevCom.Example.WebUI.Tests.Commands.UpdatePostCommandTests.InvalidPost()
TóROMBrightside.DevCom.Example.WebUI.Tests.Commands.UpdatePostCommandTests.Setup()
WòRRPBrightside.DevCom.Example.WebUI.Tests.Commands.UpdatePostCommandTests.TearDown()
XôRSQBrightside.DevCom.Example.WebUI.Tests.Commands.UpdatePostCommandTests.ValidPost()ex:\repos\brightside.devcom\src\brightside.devcom.posts.webui.tests\commands\updatepostcommandtests.cs
“öRÃ
ZõRUSBrightside.DevCom.Example.WebUI.Tests.Commands.CreatePostCommandTests.InvalidPost()
TúROMBrightside.DevCom.Example.WebUI.Tests.Commands.CreatePostCommandTests.Setup()
WùRRPBrightside.DevCom.Example.WebUI.Tests.Commands.CreatePostCommandTests.TearDown()
XûRSQBrightside.DevCom.Example.WebUI.Tests.Commands.CreatePostCommandTests.ValidPost()ex:\repos\brightside.devcom\src\brightside.devcom.posts.webui.tests\commands\createpostcommandtests.cs
˛üR¯
4†R/-Brightside.DevCom.Entities.Posts.Post..ctor()
9°R42Brightside.DevCom.Entities.Posts.Post.get_Author()
?¢R:8Brightside.DevCom.Entities.Posts.Post.set_Author(String)
;£R64Brightside.DevCom.Entities.Posts.Post.get_Comments()
@§R;9Brightside.DevCom.Entities.Posts.Post.set_Comments(IList)
:•R53Brightside.DevCom.Entities.Posts.Post.get_Content()
@¶R;9Brightside.DevCom.Entities.Posts.Post.set_Content(String)Gx:\repos\brightside.devcom\src\brightside.devcom.entities\posts\post.cs
çßRá
U®RPNBrightside.DevCom.Infrastructure.Entities.Impl.BusinessObject`2.Equals(Object)
V©RQOBrightside.DevCom.Infrastructure.Entities.Impl.BusinessObject`2.Equals(TEntity)
T™ROMBrightside.DevCom.Infrastructure.Entities.Impl.BusinessObject`2.GetHashCode()
M´RHFBrightside.DevCom.Infrastructure.Entities.Impl.BusinessObject.get_Id()
P¨RKIBrightside.DevCom.Infrastructure.Entities.Impl.BusinessObject.set_Id(TId)_x:\repos\brightside.devcom\src\brightside.devcom.infrastructure\entities\impl\businessobject.cs
Æ≠R®
nÆRigBrightside.DevCom.Infrastructure.Data.Repositories.Impl.Repository`2..ctor(IDatabaseContextFactory{T1})
UØRPNBrightside.DevCom.Infrastructure.Data.Repositories.Impl.Repository`2.Create(T)
Z∞RUSBrightside.DevCom.Infrastructure.Data.Repositories.Impl.Repository`2.Delete(Object)
U±RPNBrightside.DevCom.Infrastructure.Data.Repositories.Impl.Repository`2.Delete(T)
o≤RjhBrightside.DevCom.Infrastructure.Data.Repositories.Impl.Repository`2.Delete(Expression{Func{T,Boolean}})
U≥RPNBrightside.DevCom.Infrastructure.Data.Repositories.Impl.Repository`2.Update(T)dx:\repos\brightside.devcom\src\brightside.devcom.infrastructure\data\repositories\impl\repository.cs
ç¥Rá
vµRqoBrightside.DevCom.Infrastructure.Data.Repositories.Impl.ReadOnlyRepository`2..ctor(IDatabaseContextFactory{T1})
Y∂RTRBrightside.DevCom.Infrastructure.Data.Repositories.Impl.ReadOnlyRepository`2.All()
y∑RtrBrightside.DevCom.Infrastructure.Data.Repositories.Impl.ReadOnlyRepository`2.Contains(Expression{Func{T,Boolean}})
w∏RrpBrightside.DevCom.Infrastructure.Data.Repositories.Impl.ReadOnlyRepository`2.Filter(Expression{Func{T,Boolean}})
åπRÜÉBrightside.DevCom.Infrastructure.Data.Repositories.Impl.ReadOnlyRepository`2.Filter(Expression{Func{T,Boolean}},Int32&,Int32,Int32)
b∫R][Brightside.DevCom.Infrastructure.Data.Repositories.Impl.ReadOnlyRepository`2.Find(Object[])
uªRpnBrightside.DevCom.Infrastructure.Data.Repositories.Impl.ReadOnlyRepository`2.Find(Expression{Func{T,Boolean}})
¶ºR†ùBrightside.DevCom.Infrastructure.Data.Repositories.Impl.ReadOnlyRepository`2.Get(Expression{Func{T,Boolean}},Func{IQueryable{T},IOrderedQueryable{T}},String)
ëΩRãàBrightside.DevCom.Infrastructure.Data.Repositories.Impl.ReadOnlyRepository`2.GetAllPaged(Int32,Int32,SortBy,Expression{Func{T,Boolean}})
cæR^\Brightside.DevCom.Infrastructure.Data.Repositories.Impl.ReadOnlyRepository`2.GetById(Object)
eøR`^Brightside.DevCom.Infrastructure.Data.Repositories.Impl.ReadOnlyRepository`2.Include(DbSet{T})
]¿RXVBrightside.DevCom.Infrastructure.Data.Repositories.Impl.ReadOnlyRepository.get_Count()lx:\repos\brightside.devcom\src\brightside.devcom.infrastructure\data\repositories\impl\readonlyrepository.cs
´¡R•
G¬RB@Brightside.DevCom.Posts.WebUI.Controllers.PostController.Index()Zx:\repos\brightside.devcom\src\brightside.devcom.posts.webui\controllers\postcontroller.cs
è√Râ
ëƒRãàBrightside.DevCom.Posts.WebUI.Api.PostsController..ctor(IPostService,Func{CreatePostCommand},Func{UpdatePostCommand},IConnectionManager)
>≈R97Brightside.DevCom.Posts.WebUI.Api.PostsController.Get()
C∆R><Brightside.DevCom.Posts.WebUI.Api.PostsController.Get(Int32)
L«RGEBrightside.DevCom.Posts.WebUI.Api.PostsController.Post(PostViewModel)
K»RFDBrightside.DevCom.Posts.WebUI.Api.PostsController.Put(PostViewModel)Sx:\repos\brightside.devcom\src\brightside.devcom.posts.webui\api\postscontroller.cs
O…RJHx:\repos\brightside.devcom\src\brightside.devcom.service\ipostservice.cs
ë Rã
DÀR?=Brightside.Config.Service.Impl.PostService..ctor(IUnitOfWork)
>ÃR97Brightside.Config.Service.Impl.PostService.Create(Post)
7ÕR20Brightside.Config.Service.Impl.PostService.Get()
@ŒR;9Brightside.Config.Service.Impl.PostService.GetById(Int32)
>œR97Brightside.Config.Service.Impl.PostService.Update(Post)Hx:\repos\brightside.config\brightside.config.service\impl\postservice.cs
ˆ–R
Y—RTÆö†ÉŒñ≠ËFBrightside.DevCom.Posts.WebUI.Installers.RegisterNavigation.get_Path()(
T“ROMBrightside.DevCom.Posts.WebUI.Installers.RegisterNavigation.get_Permissions()
^”RYWBrightside.DevCom.Posts.WebUI.Installers.RegisterNavigation.get_RequireAllPermissions()]x:\repos\brightside.devcom\src\brightside.devcom.posts.webui\installers\registernavigation.cs
°‘Rõ
K’RFÖœªﬂ‘≥ÆË8Brightside.DevCom.Posts.WebUI.Hubs.PostHub.NewPost(Post)(Lx:\repos\brightside.devcom\src\brightside.devcom.posts.webui\hubs\posthub.cs
ô÷Rì
j◊RecBrightside.DevCom.Posts.WebUI.Installers.ExampleInstaller.Register(IBootstrapperContainerExtension)
HÿRCABrightside.DevCom.Posts.WebUI.Installers.ExampleInstaller.Reset()[x:\repos\brightside.devcom\src\brightside.devcom.posts.webui\installers\exampleinstaller.cs
ıŸRÔ
D⁄R?=Brightside.DevCom.WebUI.Installers.SignalRStartupTask.Reset()
N€RI…ßâ¢ù∆ÆË;Brightside.DevCom.WebUI.Installers.SignalRStartupTask.Run()(Wx:\repos\brightside.devcom\src\brightside.devcom.webui\installers\signalrstartuptask.cs
•‹Rü
P›RKISignalR.Castle.Windsor.WindsorDependencyResolver..ctor(IWindsorContainer)
HﬁRCASignalR.Castle.Windsor.WindsorDependencyResolver.GetService(Type)
IﬂRDBSignalR.Castle.Windsor.WindsorDependencyResolver.GetServices(Type)µc:\users\jonathan.stowell\appdata\local\jetbrains\resharper\v7.1\solutioncaches\_resharper.brightside.devcom.869197610\decompiler\decompiler\a3\4bce361a\windsordependencyresolver.cs
ñ‡Rê
_·RZXSystem.Web.Routing.SignalRRouteExtensions.MapConnection`1(RouteCollection,String,String)
w‚RrpSystem.Web.Routing.SignalRRouteExtensions.MapConnection`1(RouteCollection,String,String,ConnectionConfiguration)
ç„RáÑSystem.Web.Routing.SignalRRouteExtensions.MapConnection`1(RouteCollection,String,String,ConnectionConfiguration,Action{IAppBuilder})
z‰RusSystem.Web.Routing.SignalRRouteExtensions.MapConnection(RouteCollection,String,String,Type,ConnectionConfiguration)
êÂRäáSystem.Web.Routing.SignalRRouteExtensions.MapConnection(RouteCollection,String,String,Type,ConnectionConfiguration,Action{IAppBuilder})
IÊRDBSystem.Web.Routing.SignalRRouteExtensions.MapHubs(RouteCollection)
ZÁRUSSystem.Web.Routing.SignalRRouteExtensions.MapHubs(RouteCollection,HubConfiguration)
aËR\ZSystem.Web.Routing.SignalRRouteExtensions.MapHubs(RouteCollection,String,HubConfiguration)
uÈRpnSystem.Web.Routing.SignalRRouteExtensions.MapHubs(RouteCollection,String,HubConfiguration,Action{IAppBuilder})
|ÍRwuSystem.Web.Routing.SignalRRouteExtensions.MapHubs(RouteCollection,String,String,HubConfiguration,Action{IAppBuilder})
aÎR\ZSystem.Web.Routing.SignalRRouteExtensions.InitializeProtectedData(ConnectionConfiguration)≤c:\users\jonathan.stowell\appdata\local\jetbrains\resharper\v7.1\solutioncaches\_resharper.brightside.devcom.869197610\decompiler\decompiler\80\0139af09\signalrrouteextensions.cs
àÏRÇ
]ÌRXVBrightside.DevCom.Posts.WebUI.Handlers.PostWasCreatedHandler..ctor(IConnectionManager)
ZÓRUSBrightside.DevCom.Posts.WebUI.Handlers.PostWasCreatedHandler.Handle(PostWasCreated)
eÔR`^Brightside.DevCom.Posts.WebUI.Handlers.PostWasCreatedHandler.OnError(PostWasCreated,Exception)^x:\repos\brightside.devcom\src\brightside.devcom.posts.webui\handlers\postwascreatedhandler.cs
ò>Rí>
VÒRQMBrightside.DevCom.Infrastructure.Web.SignalR.WindsorHubManager.GetHub(String)(
lÚRgcBrightside.DevCom.Infrastructure.Web.SignalR.WindsorHubManager.GetHubs(Func{HubDescriptor,Boolean})(
ZÛRUQBrightside.DevCom.Infrastructure.Web.SignalR.WindsorHubManager.ResolveHub(String)(
_ÙRZ±æÜ˜æ¥ÆËLBrightside.DevCom.Infrastructure.Web.SignalR.WindsorHubManager.ResolveHubs()(
uıRplBrightside.DevCom.Infrastructure.Web.SignalR.WindsorHubManager.GetHubMethod(String,String,IList{IJsonValue})(
|ˆRwsBrightside.DevCom.Infrastructure.Web.SignalR.WindsorHubManager.GetHubMethods(String,Func{MethodDescriptor,Boolean})(
b˜R]YBrightside.DevCom.Infrastructure.Web.SignalR.WindsorHubManager..ctor(IDependencyResolver)(
U¯RPLBrightside.DevCom.Infrastructure.Web.SignalR.Plus..ctor(IDependencyResolver)(
I˘RD@Brightside.DevCom.Infrastructure.Web.SignalR.Plus.GetHub(String)(
_˙RZVBrightside.DevCom.Infrastructure.Web.SignalR.Plus.GetHubs(Func{HubDescriptor,Boolean})(
M˚RHDBrightside.DevCom.Infrastructure.Web.SignalR.Plus.ResolveHub(String)(
H¸RC?Brightside.DevCom.Infrastructure.Web.SignalR.Plus.ResolveHubs()(
h˝Rc_Brightside.DevCom.Infrastructure.Web.SignalR.Plus.GetHubMethod(String,String,IList{IJsonValue})(
o˛RjfBrightside.DevCom.Infrastructure.Web.SignalR.Plus.GetHubMethods(String,Func{MethodDescriptor,Boolean})(
WˇRRNBrightside.DevCom.Infrastructure.Web.SignalR.Plugin..ctor(IDependencyResolver)(
KÄRFBBrightside.DevCom.Infrastructure.Web.SignalR.Plugin.GetHub(String)(
aÅR\XBrightside.DevCom.Infrastructure.Web.SignalR.Plugin.GetHubs(Func{HubDescriptor,Boolean})(
OÇRJFBrightside.DevCom.Infrastructure.Web.SignalR.Plugin.ResolveHub(String)(
JÉREABrightside.DevCom.Infrastructure.Web.SignalR.Plugin.ResolveHubs()(
jÑReaBrightside.DevCom.Infrastructure.Web.SignalR.Plugin.GetHubMethod(String,String,IList{IJsonValue})(
qÖRlhBrightside.DevCom.Infrastructure.Web.SignalR.Plugin.GetHubMethods(String,Func{MethodDescriptor,Boolean})(
[ÜRVRBrightside.DevCom.Infrastructure.Web.SignalR.PluginAsse..ctor(IDependencyResolver)(
OáRJFBrightside.DevCom.Infrastructure.Web.SignalR.PluginAsse.GetHub(String)(
eàR`\Brightside.DevCom.Infrastructure.Web.SignalR.PluginAsse.GetHubs(Func{HubDescriptor,Boolean})(
SâRNJBrightside.DevCom.Infrastructure.Web.SignalR.PluginAsse.ResolveHub(String)(
NäRIEBrightside.DevCom.Infrastructure.Web.SignalR.PluginAsse.ResolveHubs()(
nãRieBrightside.DevCom.Infrastructure.Web.SignalR.PluginAsse.GetHubMethod(String,String,IList{IJsonValue})(
uåRplBrightside.DevCom.Infrastructure.Web.SignalR.PluginAsse.GetHubMethods(String,Func{MethodDescriptor,Boolean})(
\çRWSBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssem..ctor(IDependencyResolver)(
PéRKGBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssem.GetHub(String)(
fèRa]Brightside.DevCom.Infrastructure.Web.SignalR.PluginAssem.GetHubs(Func{HubDescriptor,Boolean})(
TêROKBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssem.ResolveHub(String)(
OëRJFBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssem.ResolveHubs()(
oíRjfBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssem.GetHubMethod(String,String,IList{IJsonValue})(
vìRqmBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssem.GetHubMethods(String,Func{MethodDescriptor,Boolean})(
]îRXTBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemb..ctor(IDependencyResolver)(
QïRLHBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemb.GetHub(String)(
gñRb^Brightside.DevCom.Infrastructure.Web.SignalR.PluginAssemb.GetHubs(Func{HubDescriptor,Boolean})(
UóRPLBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemb.ResolveHub(String)(
PòRKGBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemb.ResolveHubs()(
pôRkgBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemb.GetHubMethod(String,String,IList{IJsonValue})(
wöRrnBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemb.GetHubMethods(String,Func{MethodDescriptor,Boolean})(
^õRYUBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssembl..ctor(IDependencyResolver)(
RúRMIBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssembl.GetHub(String)(
hùRc_Brightside.DevCom.Infrastructure.Web.SignalR.PluginAssembl.GetHubs(Func{HubDescriptor,Boolean})(
VûRQMBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssembl.ResolveHub(String)(
QüRLHBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssembl.ResolveHubs()(
q†RlhBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssembl.GetHubMethod(String,String,IList{IJsonValue})(
x°RsoBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssembl.GetHubMethods(String,Func{MethodDescriptor,Boolean})(
_¢RZVBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssembly..ctor(IDependencyResolver)(
S£RNJBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssembly.GetHub(String)(
i§Rd`Brightside.DevCom.Infrastructure.Web.SignalR.PluginAssembly.GetHubs(Func{HubDescriptor,Boolean})(
W•RRNBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssembly.ResolveHub(String)(
R¶RMIBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssembly.ResolveHubs()(
rßRmiBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssembly.GetHubMethod(String,String,IList{IJsonValue})(
y®RtpBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssembly.GetHubMethods(String,Func{MethodDescriptor,Boolean})(
b©R]YBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLoc..ctor(IDependencyResolver)(
V™RQMBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLoc.GetHub(String)(
l´RgcBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLoc.GetHubs(Func{HubDescriptor,Boolean})(
Z¨RUQBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLoc.ResolveHub(String)(
U≠RPLBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLoc.ResolveHubs()(
uÆRplBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLoc.GetHubMethod(String,String,IList{IJsonValue})(
|ØRwsBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLoc.GetHubMethods(String,Func{MethodDescriptor,Boolean})(
c∞R^ZBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLoca..ctor(IDependencyResolver)(
W±RRNBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLoca.GetHub(String)(
m≤RhdBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLoca.GetHubs(Func{HubDescriptor,Boolean})(
[≥RVRBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLoca.ResolveHub(String)(
V¥RQMBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLoca.ResolveHubs()(
vµRqmBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLoca.GetHubMethod(String,String,IList{IJsonValue})(
}∂RxtBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLoca.GetHubMethods(String,Func{MethodDescriptor,Boolean})(
f∑Ra]Brightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLocator..ctor(IDependencyResolver)(
Z∏RUQBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLocator.GetHub(String)(
pπRkgBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLocator.GetHubs(Func{HubDescriptor,Boolean})(
^∫RYUBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLocator.ResolveHub(String)(
YªRTPBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLocator.ResolveHubs()(
yºRtpBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLocator.GetHubMethod(String,String,IList{IJsonValue})(
ÄΩR{wBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLocator.GetHubMethods(String,Func{MethodDescriptor,Boolean})(
eæR`ôÓ®√ö∆ÆËRBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLocator.GetAssemblies()(
jøReaBrightside.DevCom.Infrastructure.Web.SignalR.PluginAssemblyLocator..ctor(IPluginAssemblyProvider)(`x:\repos\brightside.devcom\src\brightside.devcom.infrastructure.web\signalr\windsorhubmanager.cs
“¿RÃ
g¡Rb`Brightside.DevCom.Infrastructure.Plugin.IPluginAssemblyProvider.get_PluginAssembliesByFullName()ax:\repos\brightside.devcom\src\brightside.devcom.infrastructure\plugin\ipluginassemblyprovider.cs
ü¬Rô
V√RQOBrightside.DevCom.WebUI.Installers.AppDomainAssemblyResolverStartupTask.Reset()
TƒROMBrightside.DevCom.WebUI.Installers.AppDomainAssemblyResolverStartupTask.Run()ix:\repos\brightside.devcom\src\brightside.devcom.webui\installers\appdomainassemblyresolverstartuptask.csÌ≈RÁ
í∆Råc«R^X:\repos\Brightside.DevCom\src\Brightside.DevCom.Posts.WebUI.Tests\Api\PostsControllerTests.csJBrightside.DevCom.Example.WebUI.Tests.Api.PostsControllerTests.GetAllPosts (BS»RNBrightside.DevCom.Posts.WebUI.Tests\Brightside.DevCom.Posts.WebUI.Tests.csprojh
e…R`«NBrightside.DevCom.Example.WebUI.Tests.Api.PostsControllerTests.GetExistingPost (B»h
h Rc«QBrightside.DevCom.Example.WebUI.Tests.Api.PostsControllerTests.GetNonExistingPost (B»h
–ÀR jÃReX:\repos\Brightside.DevCom\src\Brightside.DevCom.Posts.WebUI.Tests\Commands\CreatePostCommandTests.csQBrightside.DevCom.Example.WebUI.Tests.Commands.CreatePostCommandTests.InvalidPost (B»h
fÕRaÃOBrightside.DevCom.Example.WebUI.Tests.Commands.CreatePostCommandTests.ValidPost (B»h
–ŒR jœReX:\repos\Brightside.DevCom\src\Brightside.DevCom.Posts.WebUI.Tests\Commands\UpdatePostCommandTests.csQBrightside.DevCom.Example.WebUI.Tests.Commands.UpdatePostCommandTests.InvalidPost (B»h
f–RaœOBrightside.DevCom.Example.WebUI.Tests.Commands.UpdatePostCommandTests.ValidPost (B»h
’—Rœj“ReX:\repos\Brightside.DevCom\src\Brightside.DevCom.Posts.WebUI.Tests\Controllers\PostControllerTests.csVBrightside.DevCom.Example.WebUI.Tests.Controllers.PostControllerTests.IndexReturnsView (B»h
ﬂ”RŸn‘RiX:\repos\Brightside.DevCom\src\Brightside.DevCom.Posts.WebUI.Tests\Validators\CreatePostValidatorTests.cs\Brightside.DevCom.Example.WebUI.Tests.Validators.CreatePostValidatorTests.EmptyAuthorInvalid (B»h
t’Ro‘]Brightside.DevCom.Example.WebUI.Tests.Validators.CreatePostValidatorTests.EmptyContentInvalid (B»h
r÷Rm‘[Brightside.DevCom.Example.WebUI.Tests.Validators.CreatePostValidatorTests.NullAuthorInvalid (B»h
s◊Rn‘\Brightside.DevCom.Example.WebUI.Tests.Validators.CreatePostValidatorTests.NullContentInvalid (B»h
fÿRa‘OBrightside.DevCom.Example.WebUI.Tests.Validators.CreatePostValidatorTests.Valid (B»h
ÁŸR·p⁄RkX:\repos\Brightside.DevCom\src\Brightside.DevCom.Posts.WebUI.Tests\Validators\ProvidePostValidatorsTests.csbBrightside.DevCom.Example.WebUI.Tests.Validators.ProvidePostValidatorsTests.CreateReturnsValidator (B»h
|€Rw⁄eBrightside.DevCom.Example.WebUI.Tests.Validators.ProvidePostValidatorsTests.NullCreateThrowsException (B»h
|‹Rw⁄eBrightside.DevCom.Example.WebUI.Tests.Validators.ProvidePostValidatorsTests.NullUpdateThrowsException (B»h
y›Rt⁄bBrightside.DevCom.Example.WebUI.Tests.Validators.ProvidePostValidatorsTests.UpdateReturnsValidator (B»h
ﬂﬁRŸnﬂRiX:\repos\Brightside.DevCom\src\Brightside.DevCom.Posts.WebUI.Tests\Validators\UpdatePostValidatorTests.cs\Brightside.DevCom.Example.WebUI.Tests.Validators.UpdatePostValidatorTests.EmptyAuthorInvalid (B»h
t‡Roﬂ]Brightside.DevCom.Example.WebUI.Tests.Validators.UpdatePostValidatorTests.EmptyContentInvalid (B»h
r·Rmﬂ[Brightside.DevCom.Example.WebUI.Tests.Validators.UpdatePostValidatorTests.NullAuthorInvalid (B»h
s‚Rnﬂ\Brightside.DevCom.Example.WebUI.Tests.Validators.UpdatePostValidatorTests.NullContentInvalid (B»h
f„RaﬂOBrightside.DevCom.Example.WebUI.Tests.Validators.UpdatePostValidatorTests.Valid (B»h